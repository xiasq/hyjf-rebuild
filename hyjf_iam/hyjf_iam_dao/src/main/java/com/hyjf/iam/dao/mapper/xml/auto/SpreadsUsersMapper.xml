<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.iam.dao.mapper.auto.SpreadsUsersMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.iam.dao.model.auto.SpreadsUsers" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="spreads_userid" property="spreadsUserid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="opernote" property="opernote" jdbcType="VARCHAR" />
    <result column="operation" property="operation" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="VARCHAR" />
    <result column="addip" property="addip" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hyjf.iam.dao.model.auto.SpreadsUsers" extends="BaseResultMap" >
    <result column="set" property="set" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, spreads_userid, `type`, opernote, `operation`, addtime, addip
  </sql>
  <sql id="Blob_Column_List" >
    `set`
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hyjf.iam.dao.model.auto.SpreadsUsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from huiyingdai_spreads_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.iam.dao.model.auto.SpreadsUsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from huiyingdai_spreads_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from huiyingdai_spreads_users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from huiyingdai_spreads_users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.iam.dao.model.auto.SpreadsUsersExample" >
    delete from huiyingdai_spreads_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.iam.dao.model.auto.SpreadsUsers" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into huiyingdai_spreads_users (user_id, spreads_userid, `type`, 
      opernote, `operation`, addtime, 
      addip, `set`)
    values (#{userId,jdbcType=INTEGER}, #{spreadsUserid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{opernote,jdbcType=VARCHAR}, #{operation,jdbcType=VARCHAR}, #{addtime,jdbcType=VARCHAR}, 
      #{addip,jdbcType=VARCHAR}, #{set,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.iam.dao.model.auto.SpreadsUsers" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into huiyingdai_spreads_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="spreadsUserid != null" >
        spreads_userid,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="opernote != null" >
        opernote,
      </if>
      <if test="operation != null" >
        `operation`,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="addip != null" >
        addip,
      </if>
      <if test="set != null" >
        `set`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="spreadsUserid != null" >
        #{spreadsUserid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="opernote != null" >
        #{opernote,jdbcType=VARCHAR},
      </if>
      <if test="operation != null" >
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=VARCHAR},
      </if>
      <if test="addip != null" >
        #{addip,jdbcType=VARCHAR},
      </if>
      <if test="set != null" >
        #{set,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.iam.dao.model.auto.SpreadsUsersExample" resultType="java.lang.Integer" >
    select count(*) from huiyingdai_spreads_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update huiyingdai_spreads_users
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.spreadsUserid != null" >
        spreads_userid = #{record.spreadsUserid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.opernote != null" >
        opernote = #{record.opernote,jdbcType=VARCHAR},
      </if>
      <if test="record.operation != null" >
        `operation` = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=VARCHAR},
      </if>
      <if test="record.addip != null" >
        addip = #{record.addip,jdbcType=VARCHAR},
      </if>
      <if test="record.set != null" >
        `set` = #{record.set,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update huiyingdai_spreads_users
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      spreads_userid = #{record.spreadsUserid,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=VARCHAR},
      opernote = #{record.opernote,jdbcType=VARCHAR},
      `operation` = #{record.operation,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=VARCHAR},
      addip = #{record.addip,jdbcType=VARCHAR},
      `set` = #{record.set,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update huiyingdai_spreads_users
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      spreads_userid = #{record.spreadsUserid,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=VARCHAR},
      opernote = #{record.opernote,jdbcType=VARCHAR},
      `operation` = #{record.operation,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=VARCHAR},
      addip = #{record.addip,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.iam.dao.model.auto.SpreadsUsers" >
    update huiyingdai_spreads_users
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="spreadsUserid != null" >
        spreads_userid = #{spreadsUserid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="opernote != null" >
        opernote = #{opernote,jdbcType=VARCHAR},
      </if>
      <if test="operation != null" >
        `operation` = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=VARCHAR},
      </if>
      <if test="addip != null" >
        addip = #{addip,jdbcType=VARCHAR},
      </if>
      <if test="set != null" >
        `set` = #{set,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hyjf.iam.dao.model.auto.SpreadsUsers" >
    update huiyingdai_spreads_users
    set user_id = #{userId,jdbcType=INTEGER},
      spreads_userid = #{spreadsUserid,jdbcType=INTEGER},
      `type` = #{type,jdbcType=VARCHAR},
      opernote = #{opernote,jdbcType=VARCHAR},
      `operation` = #{operation,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=VARCHAR},
      addip = #{addip,jdbcType=VARCHAR},
      `set` = #{set,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.iam.dao.model.auto.SpreadsUsers" >
    update huiyingdai_spreads_users
    set user_id = #{userId,jdbcType=INTEGER},
      spreads_userid = #{spreadsUserid,jdbcType=INTEGER},
      `type` = #{type,jdbcType=VARCHAR},
      opernote = #{opernote,jdbcType=VARCHAR},
      `operation` = #{operation,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=VARCHAR},
      addip = #{addip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>